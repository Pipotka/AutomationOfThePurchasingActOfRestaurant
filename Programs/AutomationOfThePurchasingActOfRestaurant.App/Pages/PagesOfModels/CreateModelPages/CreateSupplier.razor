@page "/MainSupplier/CreateSupplier"
@inject IPurchasingActOfRestaurantClient PurchasingClient
@inject NavigationManager NavigationManager
@using System.Threading
@using Company.AutomationOfThePurchasingActOfRestaurant.App.Infrastructure.Validators
@using Company.AutomationOfThePurchasingActOfRestaurant.App.Infrastructure.Validators.RequestModel
@using Company.AutomationOfThePurchasingActOfRestaurant.Client
@using System.Text.Json

<PageTitle>Создание Поставщика</PageTitle>

<h3>Создание Поставщика</h3>

<EditForm Model="entity" OnValidSubmit="HandleSubmit">
    <FluentValidationValidator Validator="validationRules" />

    <div class="form-group">
        <label for="FirstName">Имя:</label>
        <InputText id="FirstName" @bind-Value="entity.FirstName" class="form-control" />
        <ValidationMessage For="@(() => entity.FirstName)" />
    </div>

    <div class="form-group">
        <label for="LastName">Фамилия:</label>
        <InputText id="LastName" @bind-Value="entity.LastName" class="form-control" />
        <ValidationMessage For="@(() => entity.LastName)" />
    </div>

    <div class="form-group">
        <label for="Patronymic">Отчество:</label>
        <InputText id="Patronymic" @bind-Value="entity.Patronymic" class="form-control" />
        <ValidationMessage For="@(() => entity.Patronymic)" />
    </div>

    <div class="d-flex justify-content-end">
        <button type="submit" class="btn btn-success">Добавить</button>
        <button type="button" class="btn btn-danger" @onclick="Cancel">Отмена</button>
    </div>
</EditForm>

@code {
    private SupplierRequest entity = new();
    private SupplierRequestValidator validationRules = new SupplierRequestValidator();
    private CancellationTokenSource cancellationTokenSource = new CancellationTokenSource();

    protected override async Task OnInitializedAsync()
    {
    }

    private async Task HandleSubmit()
    {
        var validationResult = validationRules.Validate(entity);
        if (validationResult.IsValid)
        {
            var newEntity = await PurchasingClient.AddSupplierAsync(entity, cancellationTokenSource.Token);
            NavigationManager.NavigateTo("/MainSupplier");
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/MainSupplier");
    }
}