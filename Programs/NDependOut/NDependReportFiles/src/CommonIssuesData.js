var commonIssuesData='{"baselineAvailable":"True","baselineDesc":"Baseline is same code base snapshot.","rules":[{"id":"ND1000","name":"Avoid types too big","cat":"Code Smells","url":"../../NDependReport.html?e=1#Query2071458910"},{"id":"ND1004","name":"Avoid methods with too many parameters","cat":"Code Smells","url":"../../NDependReport.html?e=1#Query1685837031"},{"id":"ND1006","name":"Avoid methods potentially poorly commented","cat":"Code Smells","url":"../../NDependReport.html?e=1#Query4051380568"},{"id":"ND1200","name":"Avoid interfaces too big","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query1702099707"},{"id":"ND1208","name":"Methods should be declared static if possible","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query46159255"},{"id":"ND1212","name":"Avoid empty interfaces","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query151566768"},{"id":"ND1301","name":"Types with disposable instance fields must be disposable","cat":"Design","url":"../../NDependReport.html?e=1#Query3767367450"},{"id":"ND1305","name":"Avoid namespaces with few types","cat":"Design","url":"../../NDependReport.html?e=1#Query3431837327"},{"id":"ND1313","name":"Override equals and operator equals on value types","cat":"Design","url":"../../NDependReport.html?e=1#Query2569341786"},{"id":"ND1400","name":"Avoid namespaces mutually dependent","cat":"Architecture","url":"../../NDependReport.html?e=1#Query1653453125"},{"id":"ND1401","name":"Avoid namespaces dependency cycles","cat":"Architecture","url":"../../NDependReport.html?e=1#Query628377565"},{"id":"ND1405","name":"Assemblies with poor cohesion (RelationalCohesion)","cat":"Architecture","url":"../../NDependReport.html?e=1#Query2589464663"},{"id":"ND1407","name":"Assemblies that don\'t satisfy the Abstractness/Instability principle","cat":"Architecture","url":"../../NDependReport.html?e=1#Query2107502245"},{"id":"ND1701","name":"Potentially Dead Methods","cat":"Dead Code","url":"../../NDependReport.html?e=1#Query1236384003"},{"id":"ND1804","name":"Avoid publicly visible constant fields","cat":"Visibility","url":"../../NDependReport.html?e=1#Query456168778"},{"id":"ND1805","name":"Fields should be declared as private or protected","cat":"Visibility","url":"../../NDependReport.html?e=1#Query2734159706"},{"id":"ND1900","name":"Fields should be marked as ReadOnly when possible","cat":"Immutability","url":"../../NDependReport.html?e=1#Query2144868306"},{"id":"ND1901","name":"Avoid non-readonly static fields","cat":"Immutability","url":"../../NDependReport.html?e=1#Query1757686740"},{"id":"ND2001","name":"Static fields naming convention","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query1160401199"},{"id":"ND2003","name":"Abstract base class should be suffixed with \'Base\'","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query3500616363"},{"id":"ND2004","name":"Exception class name should be suffixed with \'Exception\'","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query3733799081"},{"id":"ND2009","name":"Avoid types with name too long","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query875021017"},{"id":"ND2013","name":"Avoid prefixing type name with parent namespace name","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query3170948257"},{"id":"ND2020","name":"Avoid various capitalizations for method name","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query2904491536"},{"id":"ND2103","name":"Namespace name should correspond to file location","cat":"Source Files Organization","url":"../../NDependReport.html?e=1#Query754292209"},{"id":"ND2104","name":"Types with source files stored in the same directory, should be declared in the same namespace","cat":"Source Files Organization","url":"../../NDependReport.html?e=1#Query3089515900"},{"id":"ND2300","name":"Collection properties should be read only","cat":"System.Collections","url":"../../NDependReport.html?e=1#Query54113441"}]}'